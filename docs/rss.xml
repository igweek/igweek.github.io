<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Gweek</title><link>https://bbs.017121.xyz</link><description>一切皆是过程</description><copyright>Gweek</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://pic.myla.eu.org/file/29b29c1e2f4b11671ddca.png</url><title>avatar</title><link>https://bbs.017121.xyz</link></image><lastBuildDate>Mon, 20 Oct 2025 13:29:30 +0000</lastBuildDate><managingEditor>Gweek</managingEditor><ttl>60</ttl><webMaster>Gweek</webMaster><item><title>Windows系统用户权限管理</title><link>https://bbs.017121.xyz/post/105.html</link><description>## Windows系统用户权限管理

&gt;在系统中添加用户test1；添加组group1、group2；在桌面新建文件夹test，test文件夹中，新建任意txt文件，并写入任意内容。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/105.html</guid><pubDate>Mon, 20 Oct 2025 13:28:59 +0000</pubDate></item><item><title>Windows系统用户安全防护</title><link>https://bbs.017121.xyz/post/104.html</link><description>## Windows系统用户安全防护
&gt;1.用户密码必须符合复杂度要求。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/104.html</guid><pubDate>Mon, 20 Oct 2025 02:51:04 +0000</pubDate></item><item><title>安装k8s(kubernetes)+containerd</title><link>https://bbs.017121.xyz/post/103.html</link><description>## 准备环境

centos8
| 机器名      | IP              | 角色     | CPU | 内存  |
| -------- | --------------- | ------ | --- | --- |
| centos01 | 192.168.109.130 | master | 4核  | 2G  |
| centos02 | 192.168.109.131 | node   | 4核  | 2G  |

### 设置主机名，所有节点都执行


```shell
vim /etc/hosts
#增加
192.168.109.130 centos01
192.168.109.131 centos02
```

### 关闭防火墙，所有节点都执行


```shell
systemctl stop firewalld
systemctl disable firewalld
setenforce 0
vim /etc/selinux/config
#修改SELINUX的值
SELINUX=disabled
```

###### 关闭swap内存，所有节点都执行


```shell
swapoff -a
vim /etc/fstab
# 将该行注释掉
#/dev/mapper/cs-swap swap
```

### 配置网桥，所有节点都执行

1.修改参数

```shell
vim /etc/sysctl.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables 	= 1
net.ipv4.ip_forward 				= 1
vm.swappiness 						= 0
```

2.然后，加载如下两个模块，所有节点都执行



```shell
modprobe ip_vs_rr
modprobe br_netfilter
```

3.生效配置


```shell
[root@centos01 opt]# sysctl -p
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
vm.swappiness = 0
```

## 安装containerd

以下步骤所有节点都执行。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/103.html</guid><pubDate>Tue, 14 Oct 2025 05:32:29 +0000</pubDate></item><item><title>K8S安装与部署（ubuntu22.04）</title><link>https://bbs.017121.xyz/post/102.html</link><description>## 总览

1.  准备三台虚拟机Ubuntu系统
2.  为Ubuntu系统初始化一些配置
3.  安装容器运行时（cri-docker或者containerd，两种方式都介绍）
4.  安装并部署k8s集群
5.  验证集群
6.  如果安装错了，回退它！`kubeadm reset`

## 一、准备三台虚拟机

k8s集群至少准备3台机器，一台master，两台worker。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/102.html</guid><pubDate>Mon, 13 Oct 2025 08:40:50 +0000</pubDate></item><item><title>Docker安装wordpress</title><link>https://bbs.017121.xyz/post/101.html</link><description># Docker安装WordPress实验手册 (CentOS 8)

## 1. 引言

### 1.1 WordPress简介

WordPress是一款全球领先的开源内容管理系统（CMS），以其易用性、灵活性和强大的社区支持而闻名。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/101.html</guid><pubDate>Fri, 10 Oct 2025 04:12:28 +0000</pubDate></item><item><title>Docker学习指南</title><link>https://bbs.017121.xyz/post/100.html</link><description>
# Docker实验手册 (CentOS 8)

## 1. 引言

### 1.1 Docker简介

在当今的软件开发和部署领域，**容器化技术**已成为不可或缺的一部分。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/100.html</guid><pubDate>Wed, 08 Oct 2025 14:46:09 +0000</pubDate></item><item><title>基于Centos8部署K8s</title><link>https://bbs.017121.xyz/post/98.html</link><description>&gt; [!important]
&gt; [有关于K8S的部署可以参考官方文档](https://kubernetes.io/zh-cn/docs/home/)


## 1. 环境准备

### 1.1 系统要求

- 至少 2 台 CentOS 8 服务器（1 台 Master，1 台或多台 Node）
- 每台服务器至少 2GB RAM、2 个 CPU 核心
- 网络互通（关闭防火墙或配置规则）

### 1.2 配置主机名和 hosts 文件（所有节点）

```bash
# 设置主机名（以 master 节点为例）
hostnamectl set-hostname k8s-master

# 编辑 /etc/hosts，添加所有节点的 IP 和主机名
echo '192.168.1.100 k8s-master' &gt;&gt; /etc/hosts
echo '192.168.1.101 k8s-node1' &gt;&gt; /etc/hosts
```

### 1.3 关闭防火墙、SELinux 和 Swap（所有节点）

```bash
# 关闭防火墙
systemctl stop firewalld
systemctl disable firewalld

# 关闭 SELinux
setenforce 0
sed -i 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config

# 关闭 Swap
swapoff -a
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
```

### 1.4 配置内核参数（所有节点）

```bash
cat &lt;&lt;EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter

cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

sysctl --system
```

---

## 2. 安装容器运行时（所有节点）

### 2.1 安装 Docker

```bash
# 添加 Docker 仓库
dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo

# 安装 Docker
dnf install docker-ce docker-ce-cli containerd.io -y

# 启动并设置开机自启
systemctl enable --now docker
```

### 2.2 配置 Docker 使用 systemd 作为 cgroup driver

```bash
cat &gt; /etc/docker/daemon.json &lt;&lt;EOF
{
  'exec-opts': ['native.cgroupdriver=systemd'],
  'log-driver': 'json-file',
  'log-opts': {
    'max-size': '100m'
  },
  'storage-driver': 'overlay2'
}
EOF

systemctl restart docker
```

---

## 3. 安装 Kubernetes 组件（所有节点）

### 3.1 添加 Kubernetes 仓库

```bash
cat &lt;&lt;EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF
```

### 3.2 安装 kubelet、kubeadm、kubectl

```bash
# 安装指定版本（例如 1.23.0）
dnf install kubelet-1.23.0 kubeadm-1.23.0 kubectl-1.23.0 -y

# 启动 kubelet 并设置开机自启
systemctl enable --now kubelet
```

---

## 4. 初始化 Master 节点

### 4.1 使用 kubeadm 初始化集群

```bash
# 初始化集群（替换 --apiserver-advertise-address 为 Master 节点 IP）
kubeadm init --apiserver-advertise-address=192.168.1.100 --pod-network-cidr=10.244.0.0/16

# 初始化成功后，按提示配置 kubectl
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
```

### 4.2 安装网络插件（例如 Flannel）

```bash
# 应用 Flannel 配置
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
```

---

## 5. 加入 Worker 节点

在每个 Node 节点上执行以下命令（来自 `kubeadm init` 输出的提示）：

```bash
kubeadm join 192.168.1.100:6443 --token &lt;token&gt; --discovery-token-ca-cert-hash &lt;hash&gt;
```

---

## 6. 验证集群状态

在 Master 节点上运行：

```bash
# 查看节点状态
kubectl get nodes

# 查看所有 Pod 状态
kubectl get pods --all-namespaces
```

---

## 7. 常见问题及解决

- **如果节点状态为 NotReady**：检查网络插件（Flannel）是否正常运行。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/98.html</guid><pubDate>Fri, 26 Sep 2025 01:36:59 +0000</pubDate></item><item><title>基于Ubuntu22.04部署Openstack</title><link>https://bbs.017121.xyz/post/97.html</link><description>&gt; [!note]
![M 192.168.100.10.png](https://pic.myla.eu.org/file/1alvKqWr.png)
&gt; *   **操作系统**: Ubuntu 22.04 LTS
---

&gt; [!important]
&gt; ## 准备工作

### 1. 控制节点（controller）
sudo passwd root    (改root密码)

sed -i '/PermitRootLogin/d' /etc/ssh/sshd_config
echo 'PermitRootLogin yes' &gt;&gt; /etc/ssh/sshd_config
systemctl restart sshd                  （设置SSH root登录）

sudo nano /etc/netplan/01-netcfg.yaml  #文件名因人而异
```json
network:
  version: 2
  renderer: networkd
  ethernets:
    ens33:
      dhcp4: true
      optional: true
    ens34:
      addresses: [192.168.100.10/24]
      # 如果你的仅主机网络不需要网关和DNS，可以省略以下两行
      # gateway4: 192.168.100.1
      # nameservers:
      #   addresses: [8.8.8.8, 114.114.114.114]
      dhcp4: false
      optional: true
```
sudo netplan apply

bash &lt;(curl -sSL https://linuxmirrors.cn/main.sh)

### 2. compute节点
过程同上
在设置静态ip的时候 compute节点的IP是192.168.100.20

---

### 一、环境准备

1. **虚拟机配置要求**（每台）：

   - 至少4GB内存（推荐8GB以上）
   - 至少2个CPU核心
   - 至少40GB磁盘空间
   - 至少2块网卡（一块管理网络，一块数据网络）
2. **网络规划**：

   - 管理网络：用于OpenStack各组件通信（例如192.168.100.0/24）
   - 数据网络：用于虚拟机实例通信（例如192.168.200.0/24）
3. **修改主机名和hosts文件**：在第一台节点（控制节点）：

   1. `sudo hostnamectl set-hostname controller`

   在第二台节点（计算节点）：

   1. `sudo hostnamectl set-hostname compute`

   编辑`/etc/hosts`文件，添加：

   1. `192.168.100.10 controller`
   2. `192.168.100.20 compute`
4. **安装依赖包**：

   1. `sudo apt update &amp;&amp; sudo apt upgrade -y`
   2. `sudo apt install -y chrony python3-openstackclient`

### 二、配置NTP时间同步

1. 在控制节点配置chrony：

   1. `sudo nano /etc/chrony/chrony.conf`

   添加：

   1. `allow 192.168.100.0/24`

   重启服务：

   1. `sudo systemctl restart chronyd`
2. 在计算节点配置chrony同步到控制节点：

   1. `sudo nano /etc/chrony/chrony.conf`

   添加：

   1. `server controller iburst`

   重启服务并验证：

   1. `sudo systemctl restart chronyd`
   2. `chronyc sources`

### 三、配置数据库（仅控制节点）

1. 安装MariaDB：

   1. `sudo apt install -y mariadb-server python3-pymysql`
2. 配置MySQL：

   1. `sudo nano /etc/mysql/mariadb.conf.d/99-openstack.cnf`

   添加以下内容：

   1. `[mysqld]`
   2. `bind-address = 192.168.100.10`
   3. `default-storage-engine = innodb`
   4. `innodb_file_per_table = on`
   5. `max_connections = 4096`
   6. `collation-server = utf8_general_ci`
   7. `character-set-server = utf8`
3. 重启服务并设置root密码：

   1. `sudo systemctl restart mariadb`
   2. `sudo mysql_secure_installation`

### 四、安装消息队列（仅控制节点）

1. 安装RabbitMQ：

   1. `sudo apt install -y rabbitmq-server`
2. 创建OpenStack用户：

   1. `sudo rabbitmqctl add_user openstack RABBIT_PASS`
   2. `sudo rabbitmqctl set_permissions openstack '.*' '.*' '.*'`

### 五、安装Memcached（仅控制节点）

1. `sudo apt install -y memcached python3-memcache`
2. `sudo nano /etc/memcached.conf`

修改监听地址为控制节点管理IP：

1. `-l 192.168.100.10`

重启服务：

1. `sudo systemctl restart memcached`

### 六、安装OpenStack组件

#### 1. 身份服务(Keystone) - 控制节点

1. 创建数据库：

   1. `mysql -u root -p`
   2. `CREATE DATABASE keystone;`
   3. `GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'KEYSTONE_DBPASS';`
   4. `GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'KEYSTONE_DBPASS';`
   5. `FLUSH PRIVILEGES;`
   6. `exit`
2. 安装Keystone：

   1. `sudo apt install -y keystone`

   如果出现安装问题

```bash
sudo apt update --fix-missing
sudo apt install -f
```

3. 配置Keystone：

   1. `sudo nano /etc/keystone/keystone.conf`

   在`[database]`部分：

   1. `connection = mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone`

   在`[token]`部分：

   1. `provider = fernet`
4. 同步数据库并初始化Fernet密钥：

   1. `sudo su -s /bin/sh -c 'keystone-manage db_sync' keystone`
   2. `sudo keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone`
   3. `sudo keystone-manage credential_setup --keystone-user keystone --keystone-group keystone`
5. 部署Keystone：

   1. `sudo keystone-manage bootstrap --bootstrap-password ADMIN_PASS \`
   2. `--bootstrap-admin-url http://controller:5000/v3/ \`
   3. `--bootstrap-internal-url http://controller:5000/v3/ \`
   4. `--bootstrap-public-url http://controller:5000/v3/ \`
   5. `--bootstrap-region-id RegionOne`
6. 配置Apache：

   1. `sudo nano /etc/apache2/apache2.conf`

   添加：

   1. `ServerName controller`

   重启Apache：

   1. `sudo systemctl restart apache2`
7. 配置环境变量：

   1. `export OS_USER_DOMAIN_NAME=Default`
   2. `export OS_PROJECT_DOMAIN_NAME=Default`
   3. `export OS_PROJECT_NAME=admin`
   4. `export OS_USERNAME=admin`
   5. `export OS_PASSWORD=ADMIN_PASS`
   6. `export OS_AUTH_URL=http://controller:5000/v3`
   7. `export OS_IDENTITY_API_VERSION=3`
   8. `export OS_IMAGE_API_VERSION=2`
8. 创建域、项目、用户和角色：

   1. `openstack domain create --description 'An Example Domain' example`
   2. `openstack project create --domain default --description 'Service Project' service`
   3. `openstack project create --domain default --description 'Demo Project' demo`
   4. `openstack user create --domain default --password-prompt demo`
   5. `openstack role create user`
   6. `openstack role add --project demo --user demo user`

输入demo用户密码（用于界面登陆、测试）

#### 2. 镜像服务(Glance) - 控制节点

1. 创建数据库：

   1. `mysql -u root -p`
   2. `CREATE DATABASE glance;`
   3. `GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'GLANCE_DBPASS';`
   4. `GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'GLANCE_DBPASS';`
   5. `FLUSH PRIVILEGES;`
   6. `exit`
2. 创建服务凭证：

   1. `openstack user create --domain default --password-prompt glance`
   2. `openstack role add --project service --user glance admin`
   3. `openstack service create --name glance --description 'OpenStack Image' image`
   4. `openstack endpoint create --region RegionOne image public http://controller:9292`
   5. `openstack endpoint create --region RegionOne image internal http://controller:9292`
   6. `openstack endpoint create --region RegionOne image admin http://controller:9292`

输入密码`GLANCE_PASS`

3. 安装Glance：

   1. `sudo apt install -y glance`
4. 配置Glance：

   1. `sudo nano /etc/glance/glance-api.conf`

找到`[database]`部分，添加以下内容（替换`GLANCE_DBPASS`为实际密码）：

```ini
[database]
connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance
```

- 说明：这里的`glance:GLANCE_DBPASS`对应之前创建的数据库用户和密码，`controller`是数据库所在的控制节点主机名，`glance`是数据库名。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/97.html</guid><pubDate>Mon, 22 Sep 2025 15:15:19 +0000</pubDate></item><item><title>基于Centos8搭建Openstack（已失效）</title><link>https://bbs.017121.xyz/post/96.html</link><description># CentOS 8搭建 OpenStack(yoga版) 的方法和步骤

### **一、OpenStak简介**

#### 1.1、简介

OpenStack既是一个社区，也是一个项目和一个开源软件，提供开放源码软件，建立公共和私有云，它提供了一个部署云的操作平台或工具集，其宗旨在于：帮助组织运行为虚拟计算或存储服务的云，为公有云、私有云，也为大云、小云提供可扩展的、灵活的云计算。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/96.html</guid><pubDate>Mon, 22 Sep 2025 02:48:53 +0000</pubDate></item><item><title>Openstack基础架构</title><link>https://bbs.017121.xyz/post/95.html</link><description>![neutron.png](https://pic.myla.eu.org/file/1758033300286_neutron.png)

---

### OpenStack 框架概述

OpenStack 采用了模块化的架构，每个模块（或组件）负责处理特定的云服务。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/95.html</guid><pubDate>Tue, 16 Sep 2025 14:35:45 +0000</pubDate></item><item><title>KVM虚拟机迁移</title><link>https://bbs.017121.xyz/post/94.html</link><description>&gt; [!note]
&gt; KVM（Kernel-based Virtual Machine）的迁移：
&gt; 在进行KVM虚拟机迁移前，需确保以下几点：
&gt; - **相同的网络环境**：源主机和目标主机必须能够互相访问。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/94.html</guid><pubDate>Sun, 14 Sep 2025 12:20:06 +0000</pubDate></item><item><title>KVM虚拟机克隆</title><link>https://bbs.017121.xyz/post/93.html</link><description>&gt; [!note]
&gt; KVM虚拟机本质上由两部分组成：
&gt; - 虚拟机配置文件
&gt; - 虚拟磁盘

*   **配置文件**：通常位于 `/etc/libvirt/qemu/` 目录下，是一个 XML 文件（例如 `ubuntu-server.xml`）。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/93.html</guid><pubDate>Fri, 12 Sep 2025 12:53:10 +0000</pubDate></item><item><title>KVM的磁盘管理工具</title><link>https://bbs.017121.xyz/post/92.html</link><description>&gt; [!note]
&gt; ### **qemu-img 是什么？**
&gt; `qemu-img` 是 KVM中一个**命令行磁盘镜像管理工具**，专门用于创建、转换、修改和检查虚拟机磁盘镜像文件。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/92.html</guid><pubDate>Fri, 12 Sep 2025 09:05:57 +0000</pubDate></item><item><title>KVM虚拟机virsh管理命令</title><link>https://bbs.017121.xyz/post/91.html</link><description>&lt;html&gt;
&lt;body&gt;
&lt;hr&gt;
&lt;h3&gt;KVM 虚拟机 virsh 日常管理命令速查表&lt;/h3&gt;

功能 | 命令示例 | 说明
-- | -- | --
查看列表 | virsh list --all | 显示所有虚拟机及状态
开机 | virsh start  | 启动虚拟机
关机 | virsh shutdown | 正常关机（ACPI 信号）
拔电源关机 | virsh destroy | 强制关闭（相当于断电）
重启 | virsh reboot | 重启虚拟机
导出配置 | virsh dumpxml &gt; vm1.xml | 导出虚拟机 XML 配置文件
删除虚拟机 | virsh undefine | 删除虚拟机定义（不删磁盘）
导入配置 | virsh define | 通过 XML 导入虚拟机配置
修改配置 | virsh edit | 编辑虚拟机配置（vim 编辑）
挂起 | virsh suspend | 暂停虚拟机
恢复 | virsh resume | 恢复挂起的虚拟机
开机自启 | virsh autostart | 设置开机自启
控制台登录 | virsh console | 进入虚拟机控制台


&lt;hr&gt;
&lt;/body&gt;
&lt;/html&gt;


---

&gt; [!note]
&gt; # 实验案例：CentOS8 下使用 virsh 管理 KVM 虚拟机

## 一、实验环境

* 宿主机：CentOS 8
* 已安装软件包：`qemu-kvm`、`libvirt`、`virt-install`、`virt-manager`
* 已启动 libvirt 服务：

  ```bash
  systemctl enable --now libvirtd
  ```

---

## 二、实验目标

通过 virsh 命令对虚拟机进行日常管理，包括虚拟机的创建、启动、关机、配置修改、导出导入、控制台操作等。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/91.html</guid><pubDate>Fri, 12 Sep 2025 02:10:16 +0000</pubDate></item><item><title>KVM虚拟机的创建</title><link>https://bbs.017121.xyz/post/90.html</link><description>## 一、利用图形化界面安装

1、打开图形化界面

利用命令virt-manager

或者点击Applications——SystemTools——Virtual Machine Manager

![QQå¾ç20240401112307.png](https://pic.myla.eu.org/file/1757594132220_QQå¾ç20240401112307.png)

2、开始安装

![1.png](https://pic.myla.eu.org/file/1757594133368_1.png)

![2.png](https://pic.myla.eu.org/file/1757594132537_2.png)

![3.png](https://pic.myla.eu.org/file/1757594133977_3.png)

![4.png](https://pic.myla.eu.org/file/1757594133710_4.png)

![5.png](https://pic.myla.eu.org/file/1757594130770_5.png)

![6.png](https://pic.myla.eu.org/file/1757594131809_6.png)

## 二、利用命令安装虚拟机

1、下载镜像文件

下载iso镜像文件
```bash
cd /opt
wget https://mirrors.aliyun.com/centos/7/isos/x86_64/CentOS-7-x86_64-Minimal-2207-02.iso
```

2、利用virt-install命令创建虚拟机

```bash
virt-install --name=vm1 --vcpus=1 --memory=1024 --disk path=/var/lib/libvirt/images/centos1.raw,size=10,format=raw --cdrom=/opt/CentOS-7-x86_64-Minimal-2207-02.iso --network network=default,model=virtio --os-variant=centos7.0 --graphics vnc,port=5900,listen=0.0.0.0 --noautoconsole
```
临时放开5900-5910端口

```bash
sudo firewall-cmd --add-port=5900-5910/tcp --zone=public --permanent
sudo firewall-cmd --reload
```

使用vnc连接，默认端口5900

3、利用virsh命令查看虚拟机

```bash
virsh list —all
```

4、virt-install参数说明

&gt; [!note]
**`virt-install`** 是一个用于创建新虚拟机的命令行工具，它有许多参数可以配置虚拟机的各种设置。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/90.html</guid><pubDate>Thu, 11 Sep 2025 12:51:41 +0000</pubDate></item><item><title>KVM的安装</title><link>https://bbs.017121.xyz/post/89.html</link><description>### 1、 环境准备

关闭SELinux，将 /etc/sysconfig/selinux 中的 SELinux=enforcing 修改为 SELinux=disabled

`vi /etc/sysconfig/selinux`

查看CPU是否⽀持VT技术

`cat /proc/cpuinfo | grep -E 'vmx|svm'`

如果输出结果包含 svm 或 vmx 字样，则表示 CPU 支持虚拟化技术。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/89.html</guid><pubDate>Thu, 11 Sep 2025 10:32:19 +0000</pubDate></item><item><title>虚拟化技术发展史</title><link>https://bbs.017121.xyz/post/88.html</link><description>&lt;h2&gt;虚拟化技术发展简史&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;最早的影子：IBM 大机时代&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1960-70年代 IBM 大型机就有了虚拟化雏形——一台硬件划分出多个“虚拟机”，每个虚拟机跑自己的 OS。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/88.html</guid><pubDate>Thu, 11 Sep 2025 03:10:40 +0000</pubDate></item><item><title>Docker相关命令及Compose写法</title><link>https://bbs.017121.xyz/post/87.html</link><description>![file](https://s2.loli.net/2024/09/29/9NtLPkzWlujZcH4.png)

## 一、镜像管理

1. `docker search`：搜索 Docker 仓库中的镜像。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/87.html</guid><pubDate>Wed, 10 Sep 2025 05:00:16 +0000</pubDate></item><item><title>什么是Docker</title><link>https://bbs.017121.xyz/post/86.html</link><description>![image.png](https://pic.myla.eu.org/file/1727241316398_image.png)


### 1. 架构层级

- **Docker**：
  - 基于容器的虚拟化。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/86.html</guid><pubDate>Wed, 10 Sep 2025 04:57:55 +0000</pubDate></item><item><title>Docker 相关实验</title><link>https://bbs.017121.xyz/post/85.html</link><description>### **实验目标：**

1. 理解 Docker 的基本概念：容器、镜像、仓库等。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/85.html</guid><pubDate>Wed, 10 Sep 2025 04:42:09 +0000</pubDate></item><item><title>1panel运维面板的安装部署</title><link>https://bbs.017121.xyz/post/84.html</link><description>## 1.准备一台linux服务器

确保您有一台运行Linux系统的服务器，支持CentOS、Ubuntu、Debian等主流发行版，及麒麟、统信等国产操作系统。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/84.html</guid><pubDate>Tue, 09 Sep 2025 02:49:49 +0000</pubDate></item><item><title>基于centos的Zabbix监控的部署</title><link>https://bbs.017121.xyz/post/83.html</link><description>## 1. 概念解释  
**Zabbix** 是一套强大的监控系统，具有如下特点：  
- **Zabbix Server**：负责数据收集与处理。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/83.html</guid><pubDate>Sun, 07 Sep 2025 13:28:56 +0000</pubDate></item><item><title>Linux、Docker换源及镜像加速</title><link>https://bbs.017121.xyz/post/82.html</link><description>## 一键脚本

- **GNU/Linux 更换系统软件源**

```bash
bash &lt;(curl -sSL https://pic.geek.nyc.mn/main.sh)
```

- **Docker 安装与换源**
```bash
bash &lt;(curl -sSL https://pic.geek.nyc.mn/docker.sh)
```
- **Docker 更换镜像加速器**
```bash
bash &lt;(curl -sSL https://pic.geek.nyc.mn/docker.sh) --only-registry
```

## 传统方式 （centos8为例）

**为了防止出错，先备份现有的 yum 源文件：**

```bash
sudo mkdir -p /etc/yum.repos.d/backup
sudo mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup/
```
**更换阿里云yum源：**

```bash
sudo tee /etc/yum.repos.d/CentOS-Base.repo &lt;&lt; 'EOF'
[BaseOS]
name=CentOS-$releasever - Base - mirrors.aliyun.com
baseurl=https://mirrors.aliyun.com/centos-vault/8.5.2111/BaseOS/\$basearch/os/
gpgcheck=1
enabled=1
gpgkey=https://mirrors.aliyun.com/centos-vault/8.5.2111/RPM-GPG-KEY-CentOS-Official

[AppStream]
name=CentOS-$releasever - AppStream - mirrors.aliyun.com
baseurl=https://mirrors.aliyun.com/centos-vault/8.5.2111/AppStream/\$basearch/os/
gpgcheck=1
enabled=1
gpgkey=https://mirrors.aliyun.com/centos-vault/8.5.2111/RPM-GPG-KEY-CentOS-Official

[extras]
name=CentOS-$releasever - Extras - mirrors.aliyun.com
baseurl=https://mirrors.aliyun.com/centos-vault/8.5.2111/extras/\$basearch/os/
gpgcheck=1
enabled=1
gpgkey=https://mirrors.aliyun.com/centos-vault/8.5.2111/RPM-GPG-KEY-CentOS-Official
EOF
```

**清除缓存并重建**

```bash
sudo dnf clean all
sudo dnf makecache
```


**替换为国内docker源**

执行以下命令（逐行复制）👇：

```bash
# 1. 删除掉官方 Docker 源
sudo rm -f /etc/yum.repos.d/docker-ce.repo

# 2. 添加阿里云镜像源
sudo tee /etc/yum.repos.d/docker-ce.repo &lt;&lt;-'EOF'
[docker-ce-stable]
name=Docker CE Stable - mirror.aliyun.com
baseurl=https://mirrors.aliyun.com/docker-ce/linux/centos/8/x86_64/stable/
enabled=1
gpgcheck=0
EOF

# 3. 清理缓存并刷新源
sudo dnf clean all
sudo dnf makecache
```

**安装docker**

```bash
sudo dnf install -y docker-ce docker-ce-cli containerd.io
```

&gt; ✅ 这会从 **mirrors.aliyun.com** 下载所有 Docker 相关 RPM 包，国内速度飞快。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/82.html</guid><pubDate>Thu, 04 Sep 2025 02:45:31 +0000</pubDate></item><item><title>主从数据库 数据库读写分离</title><link>https://bbs.017121.xyz/post/81.html</link><description>* `db1`（192.168.56.10）：MySQL 主库 + ProxySQL（作为应用入口，做读写分离）
* `db2`（192.168.56.11）：MySQL 从库（只读）
* 应用/客户端只连接 ProxySQL（`db1:6033`），**写**走主库，**读**走从库

---

![image.png](https://pic.myla.eu.org/file/1756863511450_image.png)

# 0. 准备工作

两台干净的 CentOS 8（root 或 sudo 权限），主机名与 IP：

```bash
# db1
hostnamectl set-hostname db1 &amp;&amp; exec bash
nmcli -p dev show  # 确认网卡与IP
# 假设 db1: 192.168.56.10

# db2
hostnamectl set-hostname db2 &amp;&amp; exec bash
# 假设 db2: 192.168.56.11
```

关闭 SELinux（实验方便，生产建议按策略放行）与开放端口：

```bash
# 两台都执行
setenforce 0
sed -ri 's/^SELINUX=.*/SELINUX=permissive/' /etc/selinux/config

# 防火墙放行 MySQL(3306)、ProxySQL(6032 管理端口、6033 业务端口，仅 db1 需要)
firewall-cmd --add-port=3306/tcp --permanent
firewall-cmd --add-port=6032/tcp --permanent   # 仅 db1
firewall-cmd --add-port=6033/tcp --permanent   # 仅 db1
firewall-cmd --reload
```

---

# 1. 安装 MySQL 8（两台）

```bash
# 安装 MySQL 官方 YUM 仓库（版本号可能更新，按需替换）
rpm -Uvh https://repo.mysql.com/mysql80-community-release-el8-4.noarch.rpm

# 安装并启动
yum install -y mysql-server
systemctl enable --now mysqld
```

初始化 root 密码（MySQL 初次启动会生成临时密码）：

```bash
# 获取临时密码（两台分别查看）
grep 'temporary password' /var/log/mysqld.log

# 使用临时密码登录并设置新密码（两台各自执行，设置为相同便于实验）
mysql -uroot -p
ALTER USER 'root'@'localhost' IDENTIFIED BY 'Root@123!';
EXIT;
```

---

# 2. 配置主库（db1）与从库（db2）参数（启用 GTID）

\*\*db1（主库）\*\*修改 `/etc/my.cnf`，在 `[mysqld]` 段新增/调整：

```ini
[mysqld]
server-id=1
log_bin=/var/lib/mysql/mysql-bin
binlog_format=ROW
gtid_mode=ON
enforce_gtid_consistency=ON
binlog_row_image=FULL
innodb_flush_log_at_trx_commit=1
sync_binlog=1
```

\*\*db2（从库）\*\*修改 `/etc/my.cnf`：

```ini
[mysqld]
server-id=2
log_bin=/var/lib/mysql/mysql-bin
relay_log=/var/lib/mysql/mysql-relay-bin
relay_log_recovery=ON
read_only=ON
super_read_only=ON
gtid_mode=ON
enforce_gtid_consistency=ON
log_slave_updates=ON
```

重启 MySQL：

```bash
# 两台
systemctl restart mysqld
```

---

# 3. 主库创建复制与监控用户

在 **db1** 登录 MySQL：

```sql
-- 复制账号（给从库用）
CREATE USER 'repl'@'%' IDENTIFIED BY 'Repl@123!';
GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';

-- 监控账号（ProxySQL 健康检查用）
CREATE USER 'monitor'@'%' IDENTIFIED BY 'Monit@123!';
GRANT USAGE, REPLICATION CLIENT ON *.* TO 'monitor'@'%';

FLUSH PRIVILEGES;
```

---

# 4. 主库导出初始化数据（带 GTID），从库导入

&gt; 为确保一致性，建议主库暂时暂停 DDL/DML。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/81.html</guid><pubDate>Wed, 03 Sep 2025 01:41:20 +0000</pubDate></item><item><title>Linux NFS服务器</title><link>https://bbs.017121.xyz/post/80.html</link><description>## 一、NFS服务

NFS（Network File System）是一种用于在网络上共享文件系统的协议，它允许不同计算机之间通过网络共享文件和目录。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/80.html</guid><pubDate>Tue, 02 Sep 2025 05:43:02 +0000</pubDate></item><item><title>Linux Nginx服务器</title><link>https://bbs.017121.xyz/post/79.html</link><description>## 一、Nginx服务器

Nginx是一个流行的开源Web服务器和反向代理服务器软件。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/79.html</guid><pubDate>Tue, 02 Sep 2025 05:32:33 +0000</pubDate></item><item><title>Linux DHCP服务器</title><link>https://bbs.017121.xyz/post/78.html</link><description>### **一、什么是DHCP服务器**

DHCP（Dynamic Host Configuration Protocol）服务器是一种网络服务，用于自动分配IP地址给网络上的设备。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/78.html</guid><pubDate>Tue, 02 Sep 2025 05:31:52 +0000</pubDate></item><item><title>Linux DNS服务器</title><link>https://bbs.017121.xyz/post/77.html</link><description>## 一、什么是DNS

DNS服务器（Domain Name System Server）是一种网络服务器，它负责将域名转换为相应的IP地址。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/77.html</guid><pubDate>Tue, 02 Sep 2025 05:31:07 +0000</pubDate></item><item><title>Linux FTP服务器</title><link>https://bbs.017121.xyz/post/76.html</link><description>## 一、FTP服务器介绍

FTP（File Transfer Protocol，文件传输协议）是一种用于在计算机之间传输文件的标准网络协议。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/76.html</guid><pubDate>Tue, 02 Sep 2025 05:30:04 +0000</pubDate></item><item><title>Linux Samba服务器</title><link>https://bbs.017121.xyz/post/75.html</link><description>
## Samba是什么
Samba 是一个开源的软件套件，用于在 Linux 和类 Unix 系统上实现 SMB/CIFS 协议。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/75.html</guid><pubDate>Tue, 02 Sep 2025 05:27:38 +0000</pubDate></item><item><title>LVM逻辑卷管理</title><link>https://bbs.017121.xyz/post/74.html</link><description>LVM 全称 **Logical Volume Manager（逻辑卷管理器）**，主要用于 Linux 系统的磁盘和分区管理。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/74.html</guid><pubDate>Tue, 02 Sep 2025 04:16:22 +0000</pubDate></item><item><title>Linux命令练习</title><link>https://bbs.017121.xyz/post/73.html</link><description>每个实验都模拟了一个真实的场景，希望你不仅能敲命令，更能理解其背后的逻辑。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/73.html</guid><pubDate>Mon, 01 Sep 2025 03:08:10 +0000</pubDate></item><item><title>云计算运维</title><link>https://bbs.017121.xyz/post/72.html</link><description># 云计算平台运维最佳实践与案例分享

随着企业数字化转型的深入，云计算平台已经成为 IT 架构的核心。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/72.html</guid><pubDate>Sat, 30 Aug 2025 05:22:32 +0000</pubDate></item><item><title>EdgeOne 深度解析 边缘计算</title><link>https://bbs.017121.xyz/post/71.html</link><description>在数字化时代背景下，访问速度、安全性与运维效率成为企业和开发者最关心的三大要素。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/71.html</guid><pubDate>Fri, 29 Aug 2025 12:18:04 +0000</pubDate></item><item><title>n8n中如何让aiagent输出json格式</title><link>https://bbs.017121.xyz/post/70.html</link><description>&gt; 在 n8n 里，Agent 节点（比如 OpenAI Agent、Claude Agent、ChatGPT Agent 等）默认的输出很多时候是纯文本，并不保证是严格的 JSON 格       式。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/70.html</guid><pubDate>Fri, 22 Aug 2025 16:06:14 +0000</pubDate></item><item><title>LNPM下安装WORDPRESS</title><link>https://bbs.017121.xyz/post/67.html</link><description>
## 🧱 一、安装 LNMP 环境

### 1. 安装 Nginx

```bash
sudo dnf install epel-release -y
sudo dnf install nginx -y
sudo systemctl enable --now nginx
```

### 2. 安装 MariaDB（MySQL 的开源分支）

```bash
sudo dnf install mariadb-server -y
sudo systemctl enable --now mariadb
sudo mysql_secure_installation
```

&gt; 执行 `mysql_secure_installation` 时建议设置 root 密码，禁止远程登录，移除测试数据库。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/67.html</guid><pubDate>Thu, 29 May 2025 02:36:53 +0000</pubDate></item><item><title>Git基础</title><link>https://bbs.017121.xyz/post/66.html</link><description>## 一、Git是什么？

Git是一种分布式版本控制系统，用于跟踪文件的更改，特别是计算机代码文件的更改。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/66.html</guid><pubDate>Wed, 28 May 2025 08:32:12 +0000</pubDate></item><item><title>常见的Shell脚本</title><link>https://bbs.017121.xyz/post/65.html</link><description>![image.png](https://pic.myla.eu.org/file/1747622262076_image.png)

# 简单实用的Shell脚本示例及解释

## 1. 欢迎脚本

```bash
#!/bin/bash
# 简单的欢迎脚本

echo '请输入你的名字:'
read name
echo '你好, $name! 欢迎使用Shell脚本!'
```

### 命令解释：
- `#!/bin/bash` - 指定使用bash shell执行此脚本
- `#` - 注释符号，后面的内容不会执行
- `echo` - 打印文本到屏幕
- `read name` - 读取用户输入并存储到变量`name`中
- `$name` - 使用变量`name`的值

## 2. 计算器脚本

```bash
#!/bin/bash
# 简单的加法计算器

echo '请输入第一个数字:'
read num1
echo '请输入第二个数字:'
read num2

sum=$((num1 + num2))
echo '两数之和是: $sum'
```

### 命令解释：
- `read num1` - 读取用户输入的第一个数字
- `$(( ))` - 算术运算的语法
- `sum=$((num1 + num2))` - 计算两个数字的和并赋值给变量sum

## 3. 文件检查脚本

```bash
#!/bin/bash
# 检查文件是否存在

echo '请输入要检查的文件路径:'
read filepath

if [ -f '$filepath' ]; then
    echo '文件 $filepath 存在!'
else
    echo '文件 $filepath 不存在!'
fi
```

### 命令解释：
- `if [ -f '$filepath' ]` - 检查文件是否存在
  - `-f` - 检查是否是普通文件
- `then` - if条件成立时执行的代码开始
- `else` - if条件不成立时执行的代码开始
- `fi` - if语句结束

## 4. 当前目录文件列表

```bash
#!/bin/bash
# 显示当前目录下的文件

echo '当前目录下的文件和文件夹:'
ls
```

### 命令解释：
- `ls` - 列出当前目录下的文件和文件夹

## 5. 系统时间显示

```bash
#!/bin/bash
# 显示当前日期和时间

current_date=$(date +'%Y-%m-%d')
current_time=$(date +'%H:%M:%S')

echo '今天是: $current_date'
echo '现在时间是: $current_time'
```

### 命令解释：
- `date +'%Y-%m-%d'` - 以年-月-日格式显示日期
- `date +'%H:%M:%S'` - 以时:分:秒格式显示时间
- `$( )` - 执行括号内的命令并将结果赋值给变量

## 6. 简单的循环示例

```bash
#!/bin/bash
# 打印数字1到5

for i in 1 2 3 4 5
do
    echo '数字: $i'
done
```

### 命令解释：
- `for i in 1 2 3 4 5` - 循环5次，i的值依次为1到5
- `do` - 循环体开始
- `done` - 循环结束

## 如何使用这些脚本

1. 将代码保存为`.sh`文件，例如`welcome.sh`
2. 给脚本执行权限：
   ```bash
   chmod +x welcome.sh
   ```
3. 运行脚本：
   ```bash
   ./welcome.sh
   ```


# shell脚本进阶

## 1. 系统信息检查脚本

```bash
#!/bin/bash
# 这是一个显示系统信息的脚本

echo '===== 系统信息 ====='
echo '当前用户: $(whoami)'
echo '主机名: $(hostname)'
echo '===== 系统时间 ====='
date
echo '===== 系统运行时间 ====='
uptime
echo '===== 磁盘使用情况 ====='
df -h
echo '===== 内存使用情况 ====='
free -m
```

### 命令解释：
- `#!/bin/bash`：指定使用bash shell执行此脚本
- `# 这是一个...`：注释行，解释脚本用途
- `echo`：打印后面的文本到屏幕
- `$(command)`：执行括号内的命令并返回结果
- `whoami`：显示当前登录用户名
- `hostname`：显示系统主机名
- `date`：显示当前日期和时间
- `uptime`：显示系统运行时间和平均负载
- `df -h`：以易读格式(GB,MB)显示磁盘空间使用情况
- `free -m`：以MB为单位显示内存使用情况

## 2. 文件备份脚本

```bash
#!/bin/bash
# 文件备份脚本

backup_dir='/backup'
source_dir='/home/user/documents'
timestamp=$(date +%Y%m%d_%H%M%S)
backup_file='backup_$timestamp.tar.gz'

if [ ! -d '$backup_dir' ]; then
    mkdir -p '$backup_dir'
fi

tar -czf '$backup_dir/$backup_file' '$source_dir'

if [ $? -eq 0 ]; then
    echo '备份成功完成: $backup_file'
else
    echo '备份失败!' &gt;&amp;2
    exit 1
fi
```

### 命令解释：
- `backup_dir='/backup'`：定义变量，设置备份目录路径
- `timestamp=$(date +%Y%m%d_%H%M%S)`：获取当前时间戳，格式为年月日_时分秒
- `if [ ! -d '$backup_dir' ]; then`：检查目录是否存在
- `mkdir -p`：创建目录，-p参数确保父目录不存在时一并创建
- `tar -czf`：创建压缩归档文件
  - `-c`：创建新归档
  - `-z`：使用gzip压缩
  - `-f`：指定文件名
- `$?`：上一条命令的退出状态
- `-eq 0`：检查是否等于0(成功)
- `&gt;&amp;2`：将输出重定向到标准错误
- `exit 1`：以错误状态退出脚本

## 3. 日志文件分析脚本

```bash
#!/bin/bash
# 分析日志文件中的错误

log_file='/var/log/syslog'
error_keywords=('error' 'failed' 'warning')
output_file='error_report.txt'

if [ ! -f '$log_file' ]; then
    echo '错误: 日志文件 $log_file 不存在!' &gt;&amp;2
    exit 1
fi

&gt; '$output_file'  # 清空输出文件

for keyword in '${error_keywords[@]}'; do
    echo '===== $keyword =====' &gt;&gt; '$output_file'
    grep -i '$keyword' '$log_file' | tail -n 10 &gt;&gt; '$output_file'
    echo '' &gt;&gt; '$output_file'
done

echo '错误报告已生成: $output_file'
```

### 命令解释：
- `error_keywords=('error' 'failed' 'warning')`：定义数组变量
- `'${error_keywords[@]}'`：展开数组所有元素
- `&gt; '$output_file'`：清空文件内容(重定向空输出到文件)
- `grep -i`：搜索文本，-i忽略大小写
- `|`：管道，将前一个命令的输出作为后一个命令的输入
- `tail -n 10`：显示最后10行
- `&gt;&gt;`：追加输出到文件

## 4. 用户账户管理脚本

```bash
#!/bin/bash
# 批量添加用户

user_list=('user1' 'user2' 'user3')
default_password='ChangeMe123'

if [ $(id -u) -ne 0 ]; then
    echo '该脚本需要root权限!' &gt;&amp;2
    exit 1
fi

for user in '${user_list[@]}'; do
    if id '$user' &amp;&gt;/dev/null; then
        echo '用户 $user 已存在，跳过...'
    else
        useradd -m -s /bin/bash '$user'
        echo '$user:$default_password' | chpasswd
        passwd -e '$user'  # 强制用户首次登录修改密码
        echo '已创建用户: $user'
    fi
done
```

### 命令解释：
- `id -u`：显示当前用户ID(0表示root)
- `-ne 0`：不等于0
- `id '$user' &amp;&gt;/dev/null`：检查用户是否存在，丢弃所有输出
- `useradd`：添加用户
  - `-m`：创建用户主目录
  - `-s`：指定默认shell
- `chpasswd`：批量修改密码
- `passwd -e`：使密码立即过期，强制用户首次登录修改
- `&amp;&gt;/dev/null`：将标准输出和错误都重定向到/dev/null(丢弃)

## 5.系统监控脚本
```shell
#!/bin/bash
# 获取系统信息
cpu=$(top -bn1 | grep load | awk '{printf '%.2f', $(NF-2)}')
mem=$(free -m | awk '/Mem/{print $3'MB'}')
disk=$(df -h | awk '/\/$/{print $5}')

# 发送警报
if (( $(echo '$cpu &gt; 80' | bc -l) )); then
    echo 'High CPU usage: $cpu%' | mail -s 'Alert' admin@example.com
fi

# 输出报告
echo 'CPU: $cpu | Memory: $mem | Disk: $disk'
```
### 解释
- top -bn1：非交互式获取系统状态
- awk：文本处理工具
- bc -l：浮点数比较
- mail：发送邮件通知


。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/65.html</guid><pubDate>Wed, 28 May 2025 08:31:34 +0000</pubDate></item><item><title>Hillstone虚拟防火墙</title><link>https://bbs.017121.xyz/post/64.html</link><description>## 基础
### SGstone OS 虚拟防火墙核心功能
#### **1. 虚拟系统（VSYS）**
**定义**：
  - 每个VSYS相当于一个独立的逻辑防火墙，具备完整的策略引擎和配置界面。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/64.html</guid><pubDate>Wed, 28 May 2025 08:30:30 +0000</pubDate></item><item><title>sqlmap结合dvwa进行sql注入</title><link>https://bbs.017121.xyz/post/63.html</link><description>## 设置dvwa安全级别为**low**
## 获取有效的Cookie
登录后，使用浏览器开发者工具(F12)查看当前Cookie
![image.png](https://pic.myla.eu.org/file/1746589718115_image.png)
或者使用Burp Suite拦截一个请求，获取Cookie值

您需要的Cookie应该包含PHPSESSID和security值
## 使用SQLMap进行测试

---

## **1. 基本注入测试**
```bash
sqlmap -u 'http://192.168.214.1/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit' \
       --cookie='PHPSESSID=您的会话ID; security=low' \
       --batch
```

### **参数说明：**
- **`-u` 或 `--url`**：指定目标URL，包含可注入参数（`id=1`）。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/63.html</guid><pubDate>Wed, 28 May 2025 08:28:25 +0000</pubDate></item><item><title>虚拟机Kali忘记密码重置方法</title><link>https://bbs.017121.xyz/post/62.html</link><description>1. 将 Kali Linux 系统重启到 GRUB 引导菜单。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/62.html</guid><pubDate>Wed, 07 May 2025 03:18:03 +0000</pubDate></item><item><title>利用Burpsuite软件进行SQL盲注</title><link>https://bbs.017121.xyz/post/60.html</link><description>**核心概念回顾：**

1.  **SQL 盲注 (Blind SQL Injection):** 应用程序的响应中不直接包含数据库错误信息或查询结果，攻击者需要通过判断应用程序的**行为**来推断数据库查询结果。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/60.html</guid><pubDate>Wed, 30 Apr 2025 03:17:50 +0000</pubDate></item><item><title>sqlmap基本介绍</title><link>https://bbs.017121.xyz/post/59.html</link><description>![file](https://s2.loli.net/2025/04/23/7mhkuPcFdTv5Yg8.png)

## 一、什么是 SQLMAP？

SQLMAP 是一个开源的自动化 SQL 注入工具，用于发现和利用 SQL 注入漏洞，还可以帮助用户接管数据库系统。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/59.html</guid><pubDate>Thu, 24 Apr 2025 07:35:00 +0000</pubDate></item><item><title>Burpsuite实验</title><link>https://bbs.017121.xyz/post/58.html</link><description>### 实验1：暴力破解攻击（Brute Force）‌

‌涉及模块‌：Proxy + Intruder
‌DVWA模块‌：Brute Force (Low级别)
‌实验步骤‌：
配置浏览器代理到Burp Suite
拦截DVWA的登录请求并发送到Intruder
设置Payload positions选择用户名/密码参数
加载密码字典（可用seclists常用字典）
分析响应长度差异判断成功组合‌教学重点‌：攻击载荷类型选择、结果差异分析、速率控制

### 实验2：命令注入漏洞利用（Command Injection）‌

‌涉及模块‌：Proxy + Repeater
‌DVWA模块‌：Command Injection (Medium级别)
‌实验步骤‌：
拦截正常ping命令请求
在Repeater中添加命令拼接符; whoami
观察响应中的系统命令执行结果
尝试多命令注入&amp;&amp; net user‌拓展任务‌：绕过过滤机制（如将空格替换为${IFS}）
### ‌实验3：文件上传漏洞检测（Upload）‌
‌涉及模块‌：Proxy + Scanner
‌DVWA模块‌：File Upload (High级别)
‌实验步骤‌：
拦截文件上传请求修改后缀为.php
使用Active Scan自动检测漏洞
在Scanner结果中查看风险等级
手动验证漏洞（上传webshell）‌技术讨论‌：MIME类型绕过、Magic Bytes检测

### ‌实验4：SQL盲注攻击（SQL Injection）‌‌

涉及模块‌：Intruder + Logger
‌DVWA模块‌：SQL Injection (Low级别)
‌实验步骤‌：
构造1' AND SLEEP(5)-- 测试延时注入
使用Cluster bomb攻击模式枚举数据库名长度
配置Grep-Match标记成功响应
通过日志分析时间差判断注入结果‌高阶技巧‌：利用Turbo Intruder加速攻击

### 实验5：XSS漏洞利用（Cross-Site Scripting）‌

‌涉及模块‌：Proxy + Decoder
‌DVWA模块‌：XSS Reflected (Impossible级别)
‌实验步骤‌：
拦截用户输入请求并用Decoder进行URL编码
构造&lt;script&gt;alert(document.cookie)&lt;/script&gt;
测试不同事件触发方式onmouseover=alert(1)
分析CSP防护机制的绕过方法‌安全实践‌：对比不同防护等级下的攻击难度


### 实验6：CSRF攻击构造（CSRF）‌

‌涉及模块‌：CSRF PoC生成器 + Repeater
‌DVWA模块‌：CSRF (Medium级别)
‌实验步骤‌：
截取密码修改请求生成CSRF PoC
在Repeater中移除CSRF token重放请求
添加Referer头绕过基础防护
构造自动提交表单的恶意页面‌防御对比‌：验证SameSite Cookie设置的影响。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/58.html</guid><pubDate>Tue, 22 Apr 2025 14:48:29 +0000</pubDate></item><item><title>阿里云数据库RDS</title><link>https://bbs.017121.xyz/post/57.html</link><description>## 一、阿里云数据库RDS概念
阿里云RDS是一种基于云计算技术的关系型数据库服务，它为用户提供了一种便捷、高效、可靠的数据库管理方式。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/57.html</guid><pubDate>Sun, 20 Apr 2025 12:20:13 +0000</pubDate></item><item><title>Burp Suite 工具</title><link>https://bbs.017121.xyz/post/56.html</link><description>**Burp Suite** 是一款集成化的 Web 应用程序安全测试工具，其主要功能模块如下：
---

1. **Proxy（代理）**
    - 作为浏览器和目标服务器之间的中间人，拦截、查看和修改浏览器与服务器之间传输的HTTP和HTTPS请求和响应。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/56.html</guid><pubDate>Thu, 17 Apr 2025 04:48:02 +0000</pubDate></item><item><title>SQL注入防范</title><link>https://bbs.017121.xyz/post/55.html</link><description>

### 1. **使用预编译语句（Prepared Statements）+ 参数化查询**

这是最推荐的防御手段，适用于几乎所有主流语言和数据库（如 Java 的 `PreparedStatement`、Python 的 `cursor.execute()` 参数方式、PHP 的 PDO 等）。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/55.html</guid><pubDate>Wed, 16 Apr 2025 00:19:08 +0000</pubDate></item><item><title>阿里云VPC网络</title><link>https://bbs.017121.xyz/post/54.html</link><description>## OpenVPN 连接 VPC 的核心原理

OpenVPN 通过加密隧道实现客户端与 VPC（虚拟私有云）的安全通信，其核心流程可分为以下阶段：

1. 证书认证（PKI 体系）‌
证书作用‌：
CA 证书‌：根证书，验证服务端和客户端证书的合法性（信任链基础）。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/54.html</guid><pubDate>Mon, 14 Apr 2025 02:29:49 +0000</pubDate></item><item><title>SQL注入之盲注</title><link>https://bbs.017121.xyz/post/53.html</link><description>&gt; SQL盲注根据反馈结果分类分为 **布尔盲注**和**时间盲注**
## 以sqli-labs第五关为例（布尔盲注）
```sql
?id=1'  
#观察页面是否异常，并判定闭合方式

?id=1' --+
#若页面恢复正常，说明注入点为单引号闭合。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/53.html</guid><pubDate>Sun, 13 Apr 2025 15:46:03 +0000</pubDate></item><item><title>Mysql基本语句</title><link>https://bbs.017121.xyz/post/52.html</link><description>## 查库名
```sql
 select schema_name from information_schema.schemata
```
- `information_schema.schemata`：MySQL系统自带的元数据表，存储所有数据库的元信息。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/52.html</guid><pubDate>Sun, 13 Apr 2025 11:31:26 +0000</pubDate></item><item><title>XSS-Labs通关过程</title><link>https://bbs.017121.xyz/post/51.html</link><description>## Level1 (直接注入)

### 源码



```php
&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv='content-type' content='text/html;charset=utf-8'&gt;
&lt;script&gt;
window.alert = function()  
{     
confirm('完成的不错！');
 window.location.href='level2.php?keyword=test'; 
}
&lt;/script&gt;
&lt;title&gt;欢迎来到level1&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1 align=center&gt;欢迎来到level1&lt;/h1&gt;
&lt;?php 
ini_set('display_errors', 0);
$str = $_GET['name'];
echo '&lt;h2 align=center&gt;欢迎用户'.$str.'&lt;/h2&gt;';
?&gt;
&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;
&lt;?php 
echo '&lt;h3 align=center&gt;payload的长度:'.strlen($str).'&lt;/h3&gt;';
?&gt;
&lt;/body&gt;
&lt;/html&gt;
```

### 注入过程

在script内，如果alert函数被调用执行，则会弹出警示框，重定向到level2

window.location.href  重定向

那么直接在url的name参数进行xss注入。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/51.html</guid><pubDate>Thu, 10 Apr 2025 08:46:52 +0000</pubDate></item><item><title>n8n工作流环境变量</title><link>https://bbs.017121.xyz/post/50.html</link><description>### 环境变量
```yaml
services:
  n8n:
    image: n8nio/n8n:1.110.1
    container_name: ${CONTAINER_NAME}
    restart: always
    networks:
      - 1panel-network
    ports:
      - ${PANEL_APP_PORT_HTTP}:5678
    volumes:
      - ./data:/home/node/.n8n
    environment:
      N8N_SECURE_COOKIE=false
      WEBHOOK_URL=https://n8n.btw.pp.ua/
      N8N_EDITOR_BASE_URL=https://n8n.btw.pp.ua
      N8N_API_BASE_URL=https://n8n.btw.pp.ua
    labels:
      createdBy: 'Apps'
networks:
  1panel-network:
    external: true
```。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/50.html</guid><pubDate>Mon, 07 Apr 2025 13:37:24 +0000</pubDate></item><item><title>XSS攻击原理</title><link>https://bbs.017121.xyz/post/48.html</link><description>## XSS攻击原理：云计算和网络专业学生不可忽视的Web安全漏洞

在Web应用日益普及的今天，Web安全变得越来越重要。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/48.html</guid><pubDate>Sat, 29 Mar 2025 05:47:36 +0000</pubDate></item><item><title>使用ECS和OSS对象存储快速搭建个人网盘</title><link>https://bbs.017121.xyz/post/44.html</link><description>1. 选择实验资源

本实验支持实验资源体验、开通免费试用、个人账户资源三种实验资源方式。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/44.html</guid><pubDate>Mon, 17 Mar 2025 08:57:29 +0000</pubDate></item><item><title>基于ECS和NAS搭建个人网盘</title><link>https://bbs.017121.xyz/post/43.html</link><description>进入[云服务器ECS控制台](https://ecs.console.aliyun.com/home)，点击实例，选择领用ECS所在的地域，本实验为北京。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/43.html</guid><pubDate>Mon, 17 Mar 2025 08:52:58 +0000</pubDate></item><item><title>阿里云ECS的存储扩容</title><link>https://bbs.017121.xyz/post/42.html</link><description>## Windows
### 直接扩大 ECS 原有数据盘
1. 阿里云管理控制台，点击右侧的云盘，进入磁盘列表页面。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/42.html</guid><pubDate>Mon, 17 Mar 2025 07:59:26 +0000</pubDate></item><item><title>阿里云ECS快照</title><link>https://bbs.017121.xyz/post/41.html</link><description>
### 一、登录阿里云控制台

1. 访问阿里云官网，使用账号登录阿里云控制台。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/41.html</guid><pubDate>Mon, 17 Mar 2025 07:12:19 +0000</pubDate></item><item><title>利用阿里云OSS对象存储创建图床</title><link>https://bbs.017121.xyz/post/40.html</link><description># 为什么要搭建图床？

经常在博客写文章或者搭建自己的网站时，肯定需要往里面加图片对吧。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/40.html</guid><pubDate>Mon, 17 Mar 2025 02:06:16 +0000</pubDate></item><item><title>Windows 80端口被占用</title><link>https://bbs.017121.xyz/post/39.html</link><description>&lt;h3&gt;&lt;strong&gt;win+R 输入cmd&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/28/8jmZ9vuShPDeKgz.png' alt='file' /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;输入命令 &lt;code&gt;netstat -ano&lt;/code&gt; 查找端口对应的pid&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/28/4sB8SKhzEJAipou.png' alt='file' /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/28/83d6S5XCDguZBI2.png' alt='file' /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;输入 &lt;code&gt;netsh http show servicestate&lt;/code&gt; 并找出PID值&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/28/Zg2eUIVqf3mAOiY.png' alt='file' /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/28/jSYE5bCfqrIk39x.png' alt='file' /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;在任务管理器中关闭对应的PID进程&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/28/IXZQYvd38HRtjnE.png' alt='file' /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;启动成功&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/28/sAerYOqaSu52hN1.png' alt='file' /&gt;&lt;/p&gt;。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/39.html</guid><pubDate>Wed, 12 Mar 2025 08:18:42 +0000</pubDate></item><item><title>阿里云基础运维管理</title><link>https://bbs.017121.xyz/post/38.html</link><description>## 云服务器ECS运维管理

**思考：参照云上安全共担责任模型的说明，小云需要自己承担操作系统和其上运行的网站、用户数据以及网络访问控制等的管理，那么他要如何才能保障云服务器中个人网站能够持续良好的运行？**

小云：老王，网站我已经搭建好了，后面需要如何保障网站能够一直稳定的运行下去呢？

老王：要想保证云服务器长期稳定的使用，除了依靠**阿里云（云服务提供商）**的技术支持，自身必要的**安全维护手段**也是不可少的。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/38.html</guid><pubDate>Mon, 10 Mar 2025 06:40:36 +0000</pubDate></item><item><title>阿里云块存储</title><link>https://bbs.017121.xyz/post/37.html</link><description>本场景将提供一台配置了CentOS 7.7版本的ECS实例（云服务器）和两块高效云盘的数据盘。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/37.html</guid><pubDate>Mon, 10 Mar 2025 05:50:41 +0000</pubDate></item><item><title>阿里云ECS云上创建博客</title><link>https://bbs.017121.xyz/post/36.html</link><description>
| 配置项    | 示例                                         |
| ------ | ------------------------------------------ |
| 地域及可用区 | 地域：华东1（杭州）&lt;br&gt;&lt;br&gt;可用区：随机分配                 |
| 实例规格   | 规格族：共享标准型 s6&lt;br&gt;&lt;br&gt;实例规格：ecs.s6-c1m1.small |
| 镜像     | 类型：公共镜像&lt;br&gt;&lt;br&gt;版本：CentOS 7.7 64位           |
3. 安装并配置Apache服务

Apache是Web服务器软件。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/36.html</guid><pubDate>Mon, 10 Mar 2025 05:26:44 +0000</pubDate></item><item><title>SQLi-Labs靶场搭建</title><link>https://bbs.017121.xyz/post/35.html</link><description>## 一、SQLi-Labs
SQLi-Labs是一个专业的SQL注入练习平台，适用于GET和POST场景。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/35.html</guid><pubDate>Wed, 05 Mar 2025 12:58:53 +0000</pubDate></item><item><title>dvwa靶场搭建</title><link>https://bbs.017121.xyz/post/34.html</link><description>##  DVWA安装

DVWA是PHP/MYSQL的源码环境，我们可以将DVWA安装在PHPStudy中，PHPStudy是一个PHP调试环境集成包，集成了我们所需的环境。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/34.html</guid><pubDate>Tue, 04 Mar 2025 04:47:44 +0000</pubDate></item><item><title>XSS靶场搭建</title><link>https://bbs.017121.xyz/post/33.html</link><description>&lt;h2&gt;安装和使用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 安装宝塔面板&lt;/strong&gt;
&lt;strong&gt;2. 安装必要环境 LNPM&lt;/strong&gt;
&lt;strong&gt;3. 添加网站&lt;/strong&gt;
&lt;img src='https://s2.loli.net/2024/10/15/uYQocJLIMCyq1Wg.png' alt='file' /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;做好记录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/15/BK3OYGXCTAnw9U7.png' alt='file' /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 进入文件管理器&lt;/strong&gt;
&lt;img src='https://s2.loli.net/2024/10/15/ardUH3zX9IOMfW8.png' alt='file' /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 上传xss-labs文件zhi至网站根目录下&lt;/strong&gt;
&lt;img src='https://s2.loli.net/2024/10/15/NO9y6KxAQILwCUH.png' alt='file' /&gt;&lt;/p&gt;
&lt;p&gt;解压xss-labs
&lt;img src='https://s2.loli.net/2024/10/15/zamdBkqIEpZvLYT.png' alt='file' /&gt;&lt;/p&gt;
&lt;p&gt;将解压的文件全选，并剪切到网站根目录下即可
&lt;img src='https://s2.loli.net/2024/10/15/rORnVT29mW1jiZH.png' alt='file' /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 输入网站名进行访问&lt;/strong&gt;
&lt;img src='https://s2.loli.net/2024/10/15/enw2hBlukDN9H7R.png' alt='file' /&gt;&lt;/p&gt;。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/33.html</guid><pubDate>Mon, 03 Mar 2025 12:54:36 +0000</pubDate></item><item><title>XSS攻击</title><link>https://bbs.017121.xyz/post/32.html</link><description>&lt;p&gt;&lt;img src='https://s2.loli.net/2024/10/15/NWY9vIyKL3VdRMH.png' alt='file' /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;XSS（Cross-Site Scripting）攻击，即跨站脚本攻击，是一种常见的网络安全漏洞攻击方式。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/32.html</guid><pubDate>Mon, 03 Mar 2025 12:53:32 +0000</pubDate></item><item><title>SQL注入</title><link>https://bbs.017121.xyz/post/31.html</link><description>
&gt; SQL 注入（SQL Injection，SQLi）是一种利用 Web 应用程序中输入验证漏洞的攻击方法。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/31.html</guid><pubDate>Mon, 03 Mar 2025 12:51:48 +0000</pubDate></item><item><title>Burp Suite的功能详细讲解</title><link>https://bbs.017121.xyz/post/30.html</link><description>### **Burp Suite的功能详细讲解**

#### Proxy功能
- **原理**：Burp Suite的Proxy功能充当中间人，拦截和修改客户端（如浏览器）与Web服务器之间的HTTP/HTTPS请求和响应。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/30.html</guid><pubDate>Mon, 03 Mar 2025 12:47:11 +0000</pubDate></item><item><title>Nmap特殊用法</title><link>https://bbs.017121.xyz/post/29.html</link><description>## 排除扫描目标的命令
使用Nmap的有关参数可在扫描工作开始前指定一个、多个目标或随机产生的若干IP地址或主机名，同时使用**--exclude**可以排除一些你不想扫描的目标。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/29.html</guid><pubDate>Mon, 03 Mar 2025 12:05:27 +0000</pubDate></item><item><title>云计算相关理论</title><link>https://bbs.017121.xyz/post/28.html</link><description>## 云计算定义：
云计算是通过互联网提供计算资源（如服务器、存储、数据库、软件等）的方式。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/28.html</guid><pubDate>Mon, 03 Mar 2025 03:38:28 +0000</pubDate></item><item><title>Linux常用命令</title><link>https://bbs.017121.xyz/post/27.html</link><description>[Linux命令.pdf](https://github.com/user-attachments/files/19039494/Linux.pdf)。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/27.html</guid><pubDate>Sat, 01 Mar 2025 15:25:49 +0000</pubDate></item><item><title>阿里云ESC试用规则</title><link>https://bbs.017121.xyz/post/26.html</link><description>完成实名认证的云服务器ECS新用户，可免费试用ECS 3个月。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/26.html</guid><pubDate>Sat, 01 Mar 2025 15:17:07 +0000</pubDate></item><item><title>TCP三次握手过程</title><link>https://bbs.017121.xyz/post/25.html</link><description>TCP三次握手过程是建立可靠连接的关键步骤

### 1. 第一次握手：客户端发送SYN
- **客户端**（通常是主动发起连接的一方）想要与服务器建立连接，它会向服务器发送一个SYN（同步）标志的数据包，表示希望开始连接。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/25.html</guid><pubDate>Sat, 01 Mar 2025 12:34:29 +0000</pubDate></item><item><title>非对称加密、TLS安全连接</title><link>https://bbs.017121.xyz/post/24.html</link><description>### 1. **CA（证书颁发机构）概念**

**CA（Certificate Authority）** 是负责颁发和管理数字证书的权威机构。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/24.html</guid><pubDate>Fri, 28 Feb 2025 02:27:49 +0000</pubDate></item><item><title>OpenVpn概述</title><link>https://bbs.017121.xyz/post/23.html</link><description>## **一、OpenVPN 的运行逻辑 (连接建立和数据传输流程)**

OpenVPN 的运行逻辑可以概括为建立一个安全的、加密的隧道，将客户端的网络流量安全地传输到 VPN 服务器，并最终到达目标网络或互联网。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/23.html</guid><pubDate>Thu, 27 Feb 2025 13:48:16 +0000</pubDate></item><item><title>Kali的下载及安装</title><link>https://bbs.017121.xyz/post/22.html</link><description>### 项目一：云安全防护基础平台——Kali Linux 安装与配置

#### 一、Kali Linux 安装步骤
1. **下载 Kali Linux 镜像**
   - 访问 [Kali Linux 官网](https://www.kali.org/get-kali/) 下载适合系统架构的 ISO 镜像文件。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/22.html</guid><pubDate>Thu, 27 Feb 2025 06:25:16 +0000</pubDate></item><item><title>Nmap基本用法</title><link>https://bbs.017121.xyz/post/21.html</link><description>[![](https://s2.loli.net/2025/02/25/fUtKCSPVeBqRkx5.jpg)](https://s2.loli.net/2025/02/25/fUtKCSPVeBqRkx5.jpg)

#### 一、Nmap的定义
Nmap（Network Mapper）是一款开源的网络扫描和安全审计工具，广泛用于网络管理和安全评估。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/21.html</guid><pubDate>Thu, 27 Feb 2025 06:20:33 +0000</pubDate></item><item><title>Windows server 磁盘管理</title><link>https://bbs.017121.xyz/post/19.html</link><description>#### **一、分区表格式**&#13;
&#13;
GPT和MBR都是磁盘分区表格式，用于存储有关磁盘分区的信息。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/19.html</guid><pubDate>Tue, 27 Aug 2024 15:19:55 +0000</pubDate></item><item><title>Windows server 文件权限总结</title><link>https://bbs.017121.xyz/post/18.html</link><description>&#13;
#### 1、NTFS权限与共享权限共存&#13;
&#13;
NTFS权限和共享权限可以共存，它们一起决定了用户通过网络访问共享文件夹时的最终权限。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/18.html</guid><pubDate>Tue, 27 Aug 2024 15:17:53 +0000</pubDate></item><item><title>Windows server 文件权限管理</title><link>https://bbs.017121.xyz/post/17.html</link><description>&#13;
#### **一、分区表格式**&#13;
&#13;
GPT和MBR都是磁盘分区表格式，用于存储有关磁盘分区的信息。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/17.html</guid><pubDate>Tue, 27 Aug 2024 15:16:31 +0000</pubDate></item><item><title>Windows server 域组概念</title><link>https://bbs.017121.xyz/post/16.html</link><description>&#13;
## 1、本地域组：多域用户访问单域资源（访问同一个域）&#13;
&#13;
本地域组的成员可包括Windows Server2003、Windows 2000或WindowsNT域中的其他组和账户，而且只能在其所在域内指派权限。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/16.html</guid><pubDate>Tue, 27 Aug 2024 15:12:14 +0000</pubDate></item><item><title>Windows server 活动目录域服务总结</title><link>https://bbs.017121.xyz/post/15.html</link><description>&#13;
#### **1、概述**&#13;
&#13;
活动目录域服务 (AD DS) 是 Windows Server 操作系统中的核心身份验证和授权服务。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/15.html</guid><pubDate>Tue, 27 Aug 2024 15:10:30 +0000</pubDate></item><item><title>Windows server 域相关命令</title><link>https://bbs.017121.xyz/post/14.html</link><description>### 一、若遇到域服务无法安装提示Administrator无密码问题&#13;
&#13;
利用命令查询administrator账号信息&#13;
&#13;
`net user adminstrator`&#13;
&#13;
![](https://img.myla.eu.org/file/139476ab5567366855ec2.png)&#13;
&#13;
需要将需要密码位置修改为YES，命令如下&#13;
&#13;
```&#13;
net user administrator /passwordreq:yes&#13;
```&#13;
&#13;
再次利用 net user administrator 查询，结果如下&#13;
&#13;
![](https://img.myla.eu.org/file/6d4e1f58d46b41011d7c2.png)&#13;
&#13;
### 二、由于克隆系统，造成SID相同无法加入域&#13;
&#13;
右键开始菜单——&gt;运行——&gt;sysprep——&gt;双击sysprep——&gt;点击通用——&gt;重新安装&#13;
&#13;
![](https://img.myla.eu.org/file/85ee244d52b0d0bcc2363.png)。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/14.html</guid><pubDate>Tue, 27 Aug 2024 15:09:07 +0000</pubDate></item><item><title>Windows server DNS服务器</title><link>https://bbs.017121.xyz/post/13.html</link><description>### 一、什么是DNS&#13;
&#13;
DNS服务器（Domain Name System Server）是一种网络服务器，它负责将域名转换为相应的IP地址。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/13.html</guid><pubDate>Tue, 27 Aug 2024 15:05:30 +0000</pubDate></item><item><title>Windows server DHCP服务器</title><link>https://bbs.017121.xyz/post/12.html</link><description>&#13;
&#13;
### 一、什么是DHCP服务器&#13;
&#13;
DHCP（Dynamic Host Configuration Protocol）服务器是一种网络服务，用于自动分配IP地址给网络上的设备。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/12.html</guid><pubDate>Tue, 27 Aug 2024 15:04:01 +0000</pubDate></item><item><title>Windows server FTP服务器</title><link>https://bbs.017121.xyz/post/11.html</link><description>&#13;
## 一、FTP服务器&#13;
&#13;
文件传输协议（File Transfer Protocol，FTP）是用来在两台计算机之间传输文件的通信协议，这两台计算机，一台是FTP服务器，一台是FTP客户端。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/11.html</guid><pubDate>Tue, 27 Aug 2024 15:00:11 +0000</pubDate></item><item><title>Windows server Web服务器</title><link>https://bbs.017121.xyz/post/10.html</link><description>&#13;
&#13;
## 一、Web服务器&#13;
&#13;
Web服务器是一种软件应用程序，用于接收来自客户端的HTTP请求，并向客户端发送HTTP响应。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/10.html</guid><pubDate>Tue, 27 Aug 2024 14:58:03 +0000</pubDate></item><item><title>什么是GIT</title><link>https://bbs.017121.xyz/post/9.html</link><description>## 一、Git是什么？&#13;
&#13;
Git是一种分布式版本控制系统，用于跟踪文件的更改，特别是计算机代码文件的更改。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/9.html</guid><pubDate>Tue, 27 Aug 2024 14:53:04 +0000</pubDate></item><item><title>Github添加自定义域名</title><link>https://bbs.017121.xyz/post/8.html</link><description>## 1. 购买和设置域名&#13;
&#13;
首先，你需要一个你拥有的域名。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/8.html</guid><pubDate>Tue, 27 Aug 2024 14:51:28 +0000</pubDate></item><item><title>谷歌云免费续杯</title><link>https://bbs.017121.xyz/post/7.html</link><description>## 1、注册谷歌云&#13;
&#13;
- 一张外币信用卡、一个提前注册好的谷歌账号（不要用刚注册好的谷歌账号）&#13;
&#13;
- 需要用到的工具：身份生成、[[接码平台](https://sms-activate.org/cn/getNumber)](https://sms-activate.org/cn/getNumber)&#13;
&#13;
- 客户端或者软路由开启全局模式&#13;
&#13;
- 清理浏览器缓存：点击设置——点击隐私和安全——点击清楚浏览数据——点击清除数据&#13;
&#13;
- 用浏览器的无痕模式注册&#13;
&#13;
- 谷歌云官网：【[[点击进入](https://cloud.google.com/?hl=zh-cn)](https://cloud.google.com/?hl=zh-cn)】&#13;
&#13;
注意事项：&#13;
![1.png](https://img.myla.eu.org/file/13da9f99eb15aecd16d65.png)&#13;
&#13;
## 2、转移结算账号&#13;
&#13;
##### 新谷歌云账号：点击管理——点击重命名结算账号——点击添加成员——输入老谷歌云账号（就是老谷歌云账号的邮箱）——角色选择：Billing Account Administrator——点击保存&#13;
&#13;
![2.png](https://img.myla.eu.org/file/729488319307c157cd79c.png)&#13;
![3.png](https://img.myla.eu.org/file/e6a458fb0352c3fe8731b.png)&#13;
&#13;
![4.png](https://img.myla.eu.org/file/d074a4b92affffc3083b0.png)&#13;
&#13;
![5.png](https://img.myla.eu.org/file/c433537f55a6e0a5a250e.png)&#13;
&#13;
![6.png](https://img.myla.eu.org/file/23d0360799f86eced71af.png)&#13;
&#13;
![7.png](https://img.myla.eu.org/file/873729c3e6a66cc6ed3c5.png)&#13;
&#13;
##### 老谷歌云账号：点击结算——点击管理结算账号——这时可以看到两个结算账号——回到新谷歌云账号——把新的角色/成员移除——移除后回到老谷歌云账号——点击我的项目——找到正在使用的项目——在操作那里点开——点击更改结算信息——选择新的结算账号——点击设置账号&#13;
&#13;
![8.png](https://img.myla.eu.org/file/5f7aaf89b7e274d7e0ae7.png)&#13;
&#13;
![9.png](https://img.myla.eu.org/file/cf003c5b13ff32857f890.png)&#13;
![10.png](https://img.myla.eu.org/file/9fb75608fac82f7ea3cff.png)。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/7.html</guid><pubDate>Tue, 27 Aug 2024 14:50:04 +0000</pubDate></item><item><title>Chatgpt Prompts</title><link>https://bbs.017121.xyz/post/6.html</link><description>### 1.通俗易懂地解释复杂信息&#13;
&#13;
**ChatGPT Prompts**&#13;
&#13;
&gt; 你是一个内容易懂化的专家。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/6.html</guid><pubDate>Tue, 27 Aug 2024 14:47:57 +0000</pubDate></item><item><title>Linux文件系统结构</title><link>https://bbs.017121.xyz/post/5.html</link><description>Linux文件系统的结构是一个层次化的目录树，所有文件和目录都从根目录（/）开始。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/5.html</guid><pubDate>Tue, 27 Aug 2024 14:44:43 +0000</pubDate></item><item><title>Markdown语法</title><link>https://bbs.017121.xyz/post/4.html</link><description>&lt;!DOCTYPE html&gt;&lt;meta http-equiv='content-type' content='text/html; charset=utf-8'&gt;&lt;h1 cid='n5' mdtype='heading' class='md-end-block md-heading' style='box-sizing: border-box; break-after: avoid-page; break-inside: avoid; orphans: 4; font-size: 2.5rem; margin: 2em 0px 1.5rem; font-family: &amp;quot;Lucida Grande&amp;quot;, Corbel, sans-serif; font-weight: normal; clear: both; overflow-wrap: break-word; padding: 0px; color: rgb(222, 222, 222); line-height: 2.75rem; letter-spacing: -1.5px; white-space: pre-wrap; position: relative; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'&gt;&lt;span md-inline='plain' class='md-plain md-expand' style='box-sizing: border-box;'&gt;Markdown 标题语法&lt;/span&gt;&lt;/h1&gt;&lt;p cid='n6' mdtype='paragraph' class='md-end-block md-p' style='box-sizing: border-box; line-height: inherit; orphans: 4; margin-top: 0px; margin-bottom: 1.5rem; overflow-wrap: break-word; white-space: pre-wrap; position: relative; color: rgb(184, 191, 198); font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, Arial, &amp;quot;Segoe UI Emoji&amp;quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'&gt;&lt;span md-inline='plain' class='md-plain' style='box-sizing: border-box;'&gt;要创建标题，请在单词或短语前面添加井号 (&lt;/span&gt;&lt;span md-inline='code' spellcheck='false' class='md-pair-s' style='box-sizing: border-box;'&gt;&lt;code style='box-sizing: border-box; font-family: Monaco, Consolas, &amp;quot;Andale Mono&amp;quot;, &amp;quot;DejaVu Sans Mono&amp;quot;, monospace; text-align: left; vertical-align: initial; font-size: 0.875em; background: rgba(0, 0, 0, 0.05); padding: 2px 5px;'&gt;#&lt;/code&gt;&lt;/span&gt;&lt;span md-inline='plain' class='md-plain' style='box-sizing: border-box;'&gt;) 。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/4.html</guid><pubDate>Tue, 27 Aug 2024 14:43:30 +0000</pubDate></item><item><title>云计算概念与架构</title><link>https://bbs.017121.xyz/post/3.html</link><description>## 云计算概念、技术与架构&#13;
云计算是一种基于互联网的新型计算模式，它利用虚拟化、分布式计算、大规模并行处理等技术，将计算资源、存储资源、数据资源等通过网络以服务的形式提供给用户，使用户能够随时随地按需获取。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/3.html</guid><pubDate>Tue, 27 Aug 2024 14:36:54 +0000</pubDate></item><item><title>Welcome</title><link>https://bbs.017121.xyz/post/1.html</link><description>Hello and a warm welcome to Gweek, the place where ideas, stories, and insights converge. Whether you are a long-time follower or a first-time visitor, we are thrilled to have you here. Gweek is more than just a blog; it’s a community of curious minds and passionate hearts who come together to explore the vast tapestry of human experience.&#13;
&#13;
At Gweek, we believe in the power of words to inspire, inform, and transform. Our mission is to create a space where diverse perspectives can flourish, where readers and writers alike can share their unique voices and experiences. We are committed to fostering a welcoming environment that encourages open dialogue and mutual respect.&#13;
As you navigate through Gweek, you will find a rich collection of content spanning various topics. From in-depth analyses of current events and thoughtful reflections on personal growth to captivating stories that transport you to different worlds, there is something here for everyone. Our contributors come from all walks of life, bringing with them a wealth of knowledge and a passion for storytelling.&#13;
&#13;
One of the cornerstones of Gweek is our commitment to quality. We take great pride in ensuring that every piece of content we publish is well-researched, thoughtfully written, and meticulously edited. Our goal is to provide you with insightful and engaging reading material that not only entertains but also enlightens.&#13;
But Gweek is not just about consuming content; it’s about creating connections. We encourage you to join the conversation by leaving comments, sharing your thoughts, and engaging with other readers. Your feedback is invaluable to us, and we believe that the best ideas often come from collaborative discussions. So don’t be shy – we want to hear what you have to say.&#13;
&#13;
In addition to our regular blog posts, Gweek also features special series, interviews, and guest posts from experts in various fields. These pieces offer deeper dives into specific topics and provide a platform for voices that might otherwise go unheard. We are always on the lookout for new and exciting contributors, so if you have a story to tell or an insight to share, we would love to hear from you.&#13;
&#13;
As we continue to grow and evolve, we remain dedicated to our core values of curiosity, inclusivity, and integrity. We understand that the world is constantly changing, and we strive to reflect that dynamism in our content. Whether it’s through exploring new trends, challenging conventional wisdom, or celebrating timeless traditions, Gweek aims to be a source of inspiration and a catalyst for thoughtful discussion.&#13;
&#13;
We are grateful for the opportunity to share this journey with you. Your support and engagement are what make Gweek possible. Whether you are here to learn, be entertained, or simply find a moment of reflection, we hope that you find what you are looking for at Gweek.&#13;
&#13;
Thank you for being a part of our community. We look forward to sharing many more stories, ideas, and conversations with you. Together, let’s make Gweek a place where curiosity thrives, and where every visit leaves you a little richer in thought and spirit.&#13;
&#13;
Welcome to Gweek – where every week is a new adventure in learning and discovery.。</description><guid isPermaLink="true">https://bbs.017121.xyz/post/1.html</guid><pubDate>Thu, 06 Jun 2024 13:56:21 +0000</pubDate></item></channel></rss>